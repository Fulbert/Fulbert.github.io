import{_ as n}from"./RestartMain.vue_vue_type_script_setup_true_lang-CW0vWN1p.js";import{ae as i,l as a,an as c,f as s,a3 as t,a4 as d}from"./index-CkHtFk-G.js";import"./printengine-store-eb6PD6y-.js";import"./index-BF-LnGoJ.js";import"./app-store-BeK8FA_5.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-BAU4s81U.js";const l={class:"markdown-body"},x="Contribute to this",v="Explain how you can help yourself and your colleagues by sharing knowledge on this platform.",C="book",_=["procedure","help","share","modify","edit","contribute","readme","released"],N={__name:"README",setup(p,{expose:o}){return o({frontmatter:{title:"Contribute to this",description:"Explain how you can help yourself and your colleagues by sharing knowledge on this platform.",icon:"book",tags:["procedure","help","share","modify","edit","contribute","readme","released"]}}),(h,e)=>{const r=n;return a(),i("div",l,[e[0]||(e[0]=c(`<h1 id="create-or-edit-a-procedure" tabindex="-1">Create or edit a procedure</h1><ol><li>Open the <a href="https://dev.azure.com/BobstRnD/Narrow%20Mid%20Web%20Software/_git/Procedures?path=%2Fsrc%2Fprocedures&amp;version=GBprocedures&amp;_a=contents"><code>src/procedures</code> folder in DevOps</a> folder.</li><li>Click on the procedure you want to edit, then click <code>Edit</code>,<br><strong>OR</strong><br> Click on <code>New &gt; File</code> on top right corner.</li><li>When you are finished writing your procedure, click Preview to visualize.<br><strong>The reactive compenent won’t be rendered! It’s a good thing to make sure your procedure is still readable without the interactive part of it.</strong></li><li>If you are happy :) with your modifications, you can then click the blue button <code>Commit</code>.</li><li>Fill <em>Comment</em> section with a short description of your change (ie. <code>fix typos</code>)</li><li>Change the branch name for <code>procedure/xxx</code>.</li><li>Tick <code>Create pull request</code>.</li><li>Click on <code>Create</code> (you can edit field name and description, but check section <a href="#Convention">convention</a> below).</li><li>That’s it, you have created a pull request, that every one can comment, apply changes, and then merge to the <code>procedure</code> branch (= the <em>released</em> version).</li></ol><h2 id="formatting-texts" tabindex="-1">Formatting texts</h2><h3 id="name%2C-description-and-tags" tabindex="-1">Name, description and tags</h3><p>You can start all files with some meta datas, like the title of the procedure, a short description, and some tags. It should be formated like this:</p><pre><code class="language-markdown">---
title: Procedure title
description: Short description
icon: name_of_icon
tags:
  - etiquettes
  - example
---
</code></pre><p>Look <a href="https://fonts.google.com/icons">Material Symbols &amp; Icons</a> for icon list.</p><p>You can format your content using <a href="https://www.markdownguide.org/basic-syntax/">Markdown</a>. It’s an easy syntax that is widely supported.</p><h2 id="using-components" tabindex="-1">Using components</h2><p>Components are interactive parts of a procedure. You can easily integrate a component by adding its <code>&lt;Tag /&gt;</code> in your procedure.<br> For example, writing <code>&lt;RestartMain /&gt;</code> will create a button that will restart the main!</p>`,10)),s(r),e[1]||(e[1]=t("h2",{id:"convention",tabindex:"-1"},"Convention",-1)),e[2]||(e[2]=t("ul",null,[t("li",null,[d("Branch name: when modifying or creating a procedure, name the branch like this: "),t("code",null,"procedure/what-ever")]),t("li",null,"Pull request name: procedure: what ever"),t("li",null,"Pull request description: what ever")],-1))])}}};export{N as default,v as description,C as icon,_ as tags,x as title};
